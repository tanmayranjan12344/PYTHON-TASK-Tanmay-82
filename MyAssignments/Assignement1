{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "df8316cb-5500-4522-b468-521d7ba09673",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20\n",
      "30\n"
     ]
    }
   ],
   "source": [
    "#1. Switch values of two integers\n",
    "#Input: n1 = 20, n2 = 30\n",
    "#Output: n1 = 30, n2 = 20\n",
    "n1=20\n",
    "n2=30\n",
    "n1,n2=n2,n1\n",
    "print(n2)\n",
    "print(n1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "88827a58-3f46-41c9-b2d9-7cb3bd081917",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "java\n",
      "hello\n"
     ]
    }
   ],
   "source": [
    "#2.Switch values of two strings (characters)\n",
    "#Input: char1 = \"hello\", char2 = \"java\"\n",
    "#Output: char1 = \"java\", char2 = \"hello\"\n",
    "char1=\"hello\"\n",
    "char2=\"java\"\n",
    "char1, char2= char2, char1\n",
    "print(char1)\n",
    "print(char2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ac47a3c6-1d43-48c1-873d-07ae95a3fc34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "200\n",
      "java\n"
     ]
    }
   ],
   "source": [
    "#3.3. Switch one string value with one integer value\n",
    "#Input: n1 = 200, char2 = \"java\"\n",
    "#Output: n1 = \"java\", char2 = 200\n",
    "n1=200\n",
    "char2= \"java\"\n",
    "n1, char2= char2,n1\n",
    "print(char2)\n",
    "print(n1)\n",
    " \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "269b9cb1-c75d-4c00-8310-c419d9bc7163",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10000\n",
      "15000\n"
     ]
    }
   ],
   "source": [
    "#4.Update balance after deposit\n",
    "#Initial balance: current_balance = 10000\n",
    "#Deposit amount: deposit_balance = 5000\n",
    "#Output:\n",
    "#○ Before deposit: current_balance = 10000\n",
    "#○ After deposit: current_balance = 15000\n",
    "c_b= 10000\n",
    "d_a= 5000\n",
    "c_b2=c_b+d_a\n",
    "print(c_b)\n",
    "print(c_b2)\n",
    "\n",
    "\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "0bdd7f3d-ceeb-41d9-88eb-dd57fcebd393",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9000\n"
     ]
    }
   ],
   "source": [
    "#5 Update balance after withdrawal\n",
    "#Before: balance = 12000\n",
    "#Withdrawal: 3000\n",
    "balance=12000\n",
    "w1=3000\n",
    "balance2= balance- w1\n",
    "print(balance2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "07c29c0f-c8ef-48f6-bda6-16c2e473b25f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8\n"
     ]
    }
   ],
   "source": [
    "#6.Increase shopping cart items by 3\n",
    "#Before: cart_items = 5\n",
    "#After: ?\n",
    "cart_items=5\n",
    "items=3\n",
    "items5= cart_items+items\n",
    "print(items5)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "45ceca84-2d6f-45e7-a1db-9178997d01a3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "80.0\n"
     ]
    }
   ],
   "source": [
    "#7.Apply a 20% discount to a price\n",
    "#Before: price = 1000\n",
    "#After: ?\n",
    "price= 100\n",
    "final= 100-0.2*100\n",
    "print(final)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "9c181c7d-1ed8-464f-8cf5-7ed99fdc17da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "86.0\n"
     ]
    }
   ],
   "source": [
    "#8.Calculate student percentage\n",
    "#Input: obtain_marks = 430, out_of = 500\n",
    "#Output: Percentage = ?\n",
    "obtain_marks=430\n",
    "out_of=500\n",
    "percent= obtain_marks*100/500\n",
    "print(percent)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "bb893fcd-02d1-42a3-8d4a-736be5f72cbb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "82.5\n"
     ]
    }
   ],
   "source": [
    "#9.Calculate total and average of 4 subjects\n",
    "#Input Example:\n",
    "#● Subject 1: 80\n",
    "#● Subject 2: 75\n",
    "#● Subject 3: 90\n",
    "#● Subject 4: 85\n",
    "sub1 =80\n",
    "sub2=75\n",
    "sub3= 90\n",
    "sub4=85\n",
    "avg=(sub1+sub2+sub3+sub4)/4\n",
    "print(avg)\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "af1dba3e-799e-4cbc-a914-face041fb9c6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35.0\n"
     ]
    }
   ],
   "source": [
    "#10.1. Calculate average of 3 numbers\n",
    "#Input: num1 = 25, num2 = 35, num3 = 45\n",
    "#Output: Average = ?\n",
    "num1= 25\n",
    "num2=35\n",
    "num3=45\n",
    "Average= (num1+num2+num3)/3\n",
    "print(Average)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ee0d54da-aeba-4993-8776-a2c2b28ee803",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "100\n",
      "20.0\n"
     ]
    }
   ],
   "source": [
    "#11.Calculate profit or loss percentage\n",
    "#Input: cost_price = 500, selling_price = 600\n",
    "#Output: Profit or Loss = ?\n",
    "cp=500\n",
    "sp=600\n",
    "profit=sp-cp\n",
    "if(sp-cp):\n",
    " print(\"bonus amount\")\n",
    "else: \n",
    "   (\" huge blunder\")\n",
    "pe= profit/500*100\n",
    "print(profit)\n",
    "print(pe)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "bab9a82a-d105-4ab6-84dc-44d2da63472f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1000.0\n"
     ]
    }
   ],
   "source": [
    "#13. Calculate simple interest\n",
    "#Input: principal = 10000, rate = 5, time = 2\n",
    "#Output: Simple Interest = ?\n",
    "p=10000\n",
    "r=5\n",
    "t=2\n",
    "SI=p*r*t/100\n",
    "print(SI)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "f591f9c2-421d-44d4-b675-6435edd53418",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Compound Interest = 1038.1289062499945\n"
     ]
    }
   ],
   "source": [
    "#14.Calculate compound interest\n",
    "#Input: principal = 10000, rate = 5, time = 2\n",
    "#Output: Compound Interest = ?\n",
    "p = 10000\n",
    "r = 5\n",
    "t = 2\n",
    "n = 2\n",
    "\n",
    "A = p * (1 + r / (100 * n)) ** (n * t) # we have to put* sign so that to multilpy  because  python doesnt know the bracket as mutiplication\n",
    "CI = A - p\n",
    "\n",
    "print(\"Compound Interest =\", CI)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "d2a85548-5469-42b9-8732-501bbe8bc78f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50000.0\n"
     ]
    }
   ],
   "source": [
    "#15Calculate tax on income\n",
    "#Input: income = 500000, tax_rate = 10\n",
    "#Output: Tax = ?\n",
    "i=500000\n",
    "rate=10\n",
    "tax= rate*i/100\n",
    "print(tax)\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "f4e2abd9-e966-4fe7-9d4d-ce78f68b0f8d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25.0\n"
     ]
    }
   ],
   "source": [
    "#16Calculate percentage increase or decrease\n",
    "#Input: initial_value = 200, final_value = 250\n",
    "#Output: Percentage Change = ?\n",
    "initial_value=200\n",
    "final_value=250\n",
    "p_change= (( final_value-initial_value)/initial_value)*100\n",
    "print(p_change)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "d564629b-92e8-45f0-993f-56f585a47d03",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n"
     ]
    }
   ],
   "source": [
    "#17. Convert boolean to integer\n",
    "#Input: True\n",
    "#Output: ?\n",
    "a= True\n",
    "b= int(a)\n",
    "print(b)\n",
    "\n",
    "# C= False\n",
    "# d= int(C)\n",
    "# print(d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "d69c2e91-8482-4dd3-9932-e12df968a4b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "45.67\n",
      "<class 'str'>\n"
     ]
    }
   ],
   "source": [
    "#18.Convert float to string\n",
    "#Input: 45.67\n",
    "#Output: ?\n",
    "a=45.67\n",
    "b=str(a)\n",
    "print(b)\n",
    "print(type(b))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "fd4110b9-6f59-465b-8448-05728b8c6fb9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the temperature in the celsius 20\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "68.0\n"
     ]
    }
   ],
   "source": [
    "#19.Convert 20°C to Fahrenheit\n",
    "#Input: 20°C\n",
    "c=int(input(\"enter the temperature in the celsius\"))\n",
    "F=(c* 9/5) + 32\n",
    "print(F)\n",
    "\n",
    " \n",
    "    \n",
    "      \n",
    "      \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2b9a7c0a-87f8-4189-8160-296b929f1069",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the temprature in fehranhiet 70\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "21.11111111111111\n"
     ]
    }
   ],
   "source": [
    "#20. Convert 50°F to Celsius\n",
    "#Input: 50°F\n",
    "#Output: ?\n",
    "f=int(input(\"enter the temprature in fehranhiet\"))\n",
    "c =(f-32)*5/9\n",
    "print(c)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e468a909-baf9-4281-bdb8-d9aece0858f9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0b11001\n"
     ]
    }
   ],
   "source": [
    "#21.Convert integer to binary\n",
    "#Input: 25\n",
    "#Output: ?\n",
    "a=25\n",
    "b=bin(25)\n",
    "print(b)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0eaf9269-0b47-4632-93f2-99bd0378d614",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "30.0\n"
     ]
    }
   ],
   "source": [
    "#21. Calculate area of a triangle\n",
    "#Input: base = 10, height = 6\n",
    "#Output: Area = ?\n",
    "b= 10\n",
    "h= 6\n",
    "a=(1/2*b*h)\n",
    "print(a)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ba9f1c0c-0a9a-4380-90d1-44271f9312a8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "36\n"
     ]
    }
   ],
   "source": [
    "#Calculate perimeter of a square\n",
    "#Input: side = 9\n",
    "#Output: Perimeter = ?\n",
    "s=9\n",
    "p=4*s\n",
    "print(p)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "54f501e0-d2b9-472d-bc9d-23a25ee0b331",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "28\n"
     ]
    }
   ],
   "source": [
    "#23.Calculate diameter of a circle\n",
    "#Input: radius = 14\n",
    "#Output: Diameter = ?\n",
    "r=14\n",
    "d=2*r\n",
    "print(d)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "2a34c37b-f81a-4f9f-a482-4d8cb1e9ed96",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "125\n"
     ]
    }
   ],
   "source": [
    "#24#Calculate volume of a cube\n",
    "#Input: side = 5\n",
    "#Output: Volume = ?\n",
    "s=5\n",
    "v=s*s*s\n",
    "print(v)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "2acbd898-c5ed-4441-b0ae-38801de5e156",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "52\n"
     ]
    }
   ],
   "source": [
    "#25.Calculate surface area of a cuboid\n",
    "#Input: l = 4, b = 3, h = 2\n",
    "#Output: Surface Area = ?\n",
    "l=4\n",
    "b=3\n",
    "h=2\n",
    "a= 2*(l*b+b*h+l*h)\n",
    "print(a)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "99bbd38d-3758-44f4-8e1d-92a5c3c98562",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "144\n"
     ]
    }
   ],
   "source": [
    "#26.Square of sum: (x + y)²\n",
    "#Input: x = 5, y = 7\n",
    "#Output: ?\n",
    "x= 5\n",
    "y= 7\n",
    "z= (x+y)**2\n",
    "print(z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "e0947314-9171-41cf-9589-aa91b8114e93",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n"
     ]
    }
   ],
   "source": [
    "#27.Simplify expression: x² - 4x + 4\n",
    "#Input: x = 3\n",
    "#Output: ?\n",
    "x=3\n",
    "y= (x**2-4*x+4)\n",
    "print(y)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "bbf6688b-b77d-4677-af88-1c8f50f4ed11",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "32\n"
     ]
    }
   ],
   "source": [
    "#28.Evaluate: (a + b)(a - b)\n",
    "#Input: a = 6, b = 2\n",
    "#Output: ?\n",
    "a=6\n",
    "b=2\n",
    "c=(a+b)*(a-b)\n",
    "print(c)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "5962e3de-92f0-49c7-a9b1-875890e6c819",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9\n"
     ]
    }
   ],
   "source": [
    "#29.Sum of cubes: a³ + b³\n",
    "#Input: a = 1, b = 2\n",
    "#Output: ?\n",
    "a=1\n",
    "b=2\n",
    "c= a**3+b**3\n",
    "print(c)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "fa385091-b662-4dbb-ab46-b8b45db7e529",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "16\n"
     ]
    }
   ],
   "source": [
    "#30.Simplify: (x - y)²\n",
    "#Input: x = 10, y = 6\n",
    "#Output: ?\n",
    "x=10\n",
    "y=6\n",
    "z=(x-y)**2\n",
    "print(z)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "d1302817-0bf4-432f-9e54-d0831cbc62cb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "63\n"
     ]
    }
   ],
   "source": [
    "#31.Difference of cubes: x³ - y³\n",
    "#Input: x = 4, y = 1\n",
    "#Output: ?\n",
    "x=4\n",
    "y=1\n",
    "z=x**3-y**3\n",
    "print(z)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "f55d7477-842c-4b1f-a730-851d9dc017b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Meet Tanmay Ranjan a 24 year-old enthusiast from Bareilly When not busy with daily tasks Dev loves spending time Reading novels Life in Bareilly keeps energetic and curious every single day.with coding as a passion, the future looks creative and inspiring for Tanmay Ranjan  in the Bareilly City.\n"
     ]
    }
   ],
   "source": [
    "#32.If user input is:\n",
    "#Name: Dev\n",
    "#Age: 25\n",
    "#City: Jaipur\n",
    "#Hobby: Cooking\n",
    "#Then Output is :\n",
    "#Meet Dev, a 25-year-old enthusiast from Jaipur\n",
    "Name= \"Tanmay Ranjan\"\n",
    "Age=24\n",
    "city =\"Bareilly\"\n",
    "hobby =\"Reading novels\"\n",
    "print(\"Meet\",Name,\"a\",Age,\"year-old enthusiast from\",city,\"When not busy with daily tasks\",\"Dev loves spending time\",hobby,\"Life in\",city,\"keeps energetic and curious every single day.\"\n",
    "\"with coding as a passion, the future looks creative and inspiring for\",Name,\" in the\", city, \"City.\")\n",
    "\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "d0f5197c-1910-4590-aefa-416ac1d4e79a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter  the name  Tanmay Ranjan\n",
      "enter the profession Student\n",
      "enter the favorte quote Beauty lies in the Eyes of the beholder\n",
      "enter the year of exp 2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------------\n",
      "Name  : Tanmay Ranjan\n",
      "Proffesion  : Student\n",
      "Favorite quotes : Beauty lies in the Eyes of the beholder\n",
      "Experiance : 2\n",
      "---------------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "#  33.Create a Python program that asks the user for the following:\n",
    "# ● Full Name\n",
    "# ● Profession\n",
    "# ● Favorite Quote\n",
    "# ● Years of Experience\n",
    "# Output format:\n",
    "# ------------------------------------------------\n",
    "# Name : <Full Name>\n",
    "# Profession : <Profession>\n",
    "# Experience : <Years of Experience> years\n",
    "# Quote : \"<Favorite Quote>\"\n",
    "# -------------------------------------------------\n",
    "Name = input(\"enter  the name \")\n",
    "prof=input(\"enter the profession\")\n",
    "favq= input(\"enter the favorte quote\")\n",
    "exp= input(\"enter the year of exp\")\n",
    "print(\"--------------------------------------------------------\")\n",
    "print(\"Name  :\",Name)\n",
    "print(\"Proffesion  :\",prof)\n",
    "print(\"Favorite:\",favq)\n",
    "print(\"Experiance :\",exp)\n",
    "print(\"---------------------------------------------------------\")\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a5bcf942-6ef7-4e6d-bca2-9b48e654f8b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Movie Ticket\n",
      "-------------------------------\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the movie name  bahubali\n",
      "enter the name Tanmay Ranjan\n",
      "enter the seato no. 10\n",
      "enter the show time 10.20\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Movie: bahubali\n",
      "Name: Tanmay Ranjan\n",
      "Seat no. 10\n",
      "Time 10.20\n",
      "Enjoy the Show!\n",
      "---------------------------------\n"
     ]
    }
   ],
   "source": [
    "# 34.Ask the user:\n",
    "# ● Movie Name\n",
    "# ● Viewer Name\n",
    "# ● Seat Number\n",
    "# ● Show Time\n",
    "# Output format:\n",
    "# 🎬 Movie Ticket 🎟\n",
    "# ------------------------\n",
    "# Movie : <Movie Name>\n",
    "# Name : <Viewer Name>\n",
    "# Seat No : <Seat Number>\n",
    "# Time : <Show Time>\n",
    "# Enjoy the show!\n",
    "# ------------------------\n",
    "print(\"Movie Ticket\")\n",
    "print(\"-------------------------------\")\n",
    "m=input(\"enter the movie name \")\n",
    "n=input(\"enter the name\")\n",
    "s=input(\"enter the seato no.\")\n",
    "st=input(\"enter the show time\")\n",
    "print(\"Movie:\",m)\n",
    "print(\"Name:\",n)\n",
    "print(\"Seat no.\",s)\n",
    "print(\"Time\",st)\n",
    "print(\"Enjoy the Show!\")\n",
    "print(\"---------------------------------\")\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bde7ff79-1153-4a73-8cc7-9f840d453c06",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
